# This workflow will run to build .NET application on self-hosted runner
# $GITHUB_WORKSPACE/${{env.config_files}}/${{env.config_file_dir}}/deployment.sh - Need to fix permission issue
env:
    config_files: 'config-files'
    config_file_dir: 'demo-rest-app-api'
    deployment_script: '/home/runner_scripts'
name: CI
on:
 workflow_dispatch:
  inputs:
   name:
    description: 'Who initiating this workflow?'
    required: true
   reason:
    description: 'Reason for initiation?'
    required: true

 push:
  branches:
   - 'main'

jobs:
  BUILD:
    runs-on: self-hosted

    outputs:
      version: ${{steps.GetProperties.outputs.version}}
      branch_name: ${{steps.SetBranchName.outputs.branch}}

    steps:

    - name: Set Branch Name
      id: SetBranchName
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

    - name: Chekout Repository
      uses: actions/checkout@v2

    - name: Get Properties
      id: GetYMLfileProperties
      uses: doughepi/yaml-env-action@v1.0.0
      with:
       files: properties.yml

    - name: Set Version Information
      id: GetProperties
      shell: bash
      run: echo "::set-output name=version::${{env.APPLICATION_VERSION}}"

    - name: Set Short Commit Hash
      id: SetCommitHash
      shell: bash
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Build Solution
      run: dotnet publish -c Release -r linux-x64 --output BUILD /p:VersionPrefix=${{env.APPLICATION_VERSION}}.${{github.run_number}} --self-contained true

  DEPLOYMENT:
    runs-on: self-hosted
    needs: BUILD
    steps:

    - name: Configuration Files
      uses: actions/checkout@v2
      with:
        repository: '${{github.repository_owner}}/${{env.config_files}}'
        path: '${{env.config_files}}'
        token: ${{secrets.ACCESS_TOKEN}}

    - name: Deploy Artifacts
      shell: bash
      run: |
       ${{env.deployment_script}}/demo-rest-app-api/deployment.sh

  PUBLISH:
     runs-on: self-hosted
     needs: [BUILD, DEPLOYMENT]
     steps:
     - name: Checking Version Tag
       uses: mukunku/tag-exists-action@v1.0.0
       id: checkTag
       with: 
        tag: ${{needs.BUILD.outputs.version}}.${{github.run_number}}
       env:
           GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
     
     - name: Create Release
       if: steps.checkTag.outputs.exists == 'false'
       uses: avakar/tag-and-release@v1.0.0
       with:
        tag_name: ${{needs.BUILD.outputs.version}}.${{github.run_number}}
        release_name: ${{needs.BUILD.outputs.version}}.${{github.run_number}} - ${{needs.BUILD.outputs.branch_name}}
        body:  Automated deployment from ${{needs.BUILD.outputs.branch_name}} branch deployed by Github Actions
        draft: false
        prerelease: false
        commit: ${{github.sha}}
       env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} 
